import loggingfrom buttons import *from aiogram import Bot, Dispatcher, executor, typesfrom aiogram.types import Message , ReplyKeyboardRemove , CallbackQueryfrom aiogram.dispatcher.filters import Textfrom aiogram.dispatcher.filters.state import State, StatesGroupfrom aiogram.dispatcher import FSMContextfrom config import API , ADMINlogging.basicConfig(level=logging.DEBUG)bot = Bot(token=API)dp = Dispatcher(bot=bot)HELP_COMMAND = """<b>/help</b> - <em>Kommandalar</em><b>/start</b> - <em>Botni ishga tushiring</em><b>/lang_lotin</b> - <em>Lotin harflariga o\'tkazish</em><b>/lang_kiril</b> - <em>Kiril harflarga o\'tkazish</em><b>/malumot</b> - <em> Bu yerda Ayollar haqida ma'lumot beriladi </em><b>/biz_haqimizda</b> - <em> Biz haqimizda to'liq ma'lumot </em><b>/ism </b> - <em> Ismingizni kiriting buyrug'i </em><b>/joy </b> - <em> Yashash manzilingizni kiriting buyrug'i </em><b>/num </b> - <em> Telefon raqamingizni kiriting buyrug'i </em>            """keyboard_lang_btn = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)keyboard_lang_btn.add(    types.KeyboardButton(text="O'zbek lotin"),    types.KeyboardButton(text="O'zbek kiril"))keyboard_inl = types.InlineKeyboardMarkup(row_width=2)keyboard_inl.add(    types.InlineKeyboardButton(text="üë®üèª‚ÄçErkak", callback_data='erkak'),    types.InlineKeyboardButton(text="üë©üèª‚ÄçAyol", callback_data='ayol'))keyboard_inl.insert(    types.InlineKeyboardButton(text="Bekor qilish‚ùå", callback_data='cancel'))# bot ishga tushganini consolga chiqarib ma'lumot beradiasync def on_startup(_):    print("Bot ishga tushdi.....")# /help buyrug'i bo'lganda commandalar oynasini chiqaradi@dp.message_handler(commands=['help'])async def help_command(message: types.Message):    await bot.send_message(chat_id=message.from_user.id,                           text=HELP_COMMAND,                           parse_mode="HTML",                           reply_markup=ikb                           )    await message.delete()@dp.message_handler(commands=['start'])async def on_start(message: types.Message):    await message.delete()    await message.answer(        text=f"Assalomu alaykum xurmatli foydalanuvchi!"             f" Bizga o'z murojaatlaringizni yo'llang "             f"Biror narsaga tushunmasangiz /help kommandasini bering",            reply_markup=keyboard_lang_btn    )@dp.message_handler(text = "O'zbek lotin")async def lotin(message: types.Message):    await message.answer(        text="Siz lotin alifbosini tanladingiz!\n"             "O'z jinsingizni tanlang",        reply_markup=keyboard_inl    )@dp.message_handler(text = "O'zbek kiril")async def kiril(message: types.Message):    await message.answer(        text=f"–°–∏–∑ –∫–∏—Ä–∏–ª –∞–ª–∏—Ñ–±–æ—Å–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑!\n"             f"–é–∑ –∂–∏–Ω—Å–∏–Ω–≥–∏–∑–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥!",        reply_markup=keyboard_inl    )@dp.callback_query_handler(text_contains = 'erkak')async def erkak(call: CallbackQuery):    await call.answer(cache_time=60)    await call.message.answer('Sizga kirish mumkin emas! Bu bot faqat ayollar uchun')@dp.callback_query_handler(text_contains='ayol')async def ayol(call: CallbackQuery):    await call.answer(cache_time=60)    await call.message.answer('Siz qaysi sektorda istiqomat qilasiz', reply_markup=sector)@dp.callback_query_handler(text_contains='firsec')async def fir(call: CallbackQuery):    await call.answer(cache_time=60)    await call.message.answer('Siz istiqomat qiladigan tuman yoki qishloqni tanlang!', reply_markup=sector_village)@dp.callback_query_handler(text_contains = 'secosec')async def sec(call: CallbackQuery):    await call.answer(cache_time=60)    await call.message.answer('Siz istiqomat qiladigan tuman yoki qishloqni tanlang!', reply_markup=sector_village2)@dp.callback_query_handler(text_contains='thirsec')async def thir(call: CallbackQuery):    await call.answer(cache_time=60)    await call.message.answer('Siz istiqomat qiladigan tuman yoki shaharni tanlang!',reply_markup=sector_village3)@dp.callback_query_handler(text_contains='cancel')async def chiq(call: CallbackQuery):    await  call.answer(cache_time=60)    await call.message.delete()    await call.message.answer('Bekor qilindi ‚ùå', reply_markup=keyboard_lang_btn)    await call.message.answer('Asosiy menuga o\'tildi', reply_markup=btn)@dp.message_handler(text = 'Orqaga üîô')async def orqa(message: types.Message):    await message.answer(        f"Orqaga üîô  o'tildi",        reply_markup=keyboard_lang_btn    )@dp.message_handler(text = 'Ayollar daftari')async def daftar(message: types.Message):    await message.answer(        f"""Ayollar daftari ‚Äî ijtimoiy, iqtisodiy, huquqiy, psixologik qo‚Äòllab-quvvatlashga, bilim va kasb o‚Äòrganishga ehtiyoji va ishtiyoqi bo‚Äòlgan, ishsiz xotin-qizlarning muammolarini aniqlash, bartaraf etish va nazoratini olib borish bo‚Äòyicha ma‚Äôlumotlar bazasi."""    )@dp.message_handler(text='Ayollar uchun Imtiyozli kreditlar')async def kredit(message: types.Message):    await message.answer(        f"""Kreditlar ¬´Ayollar daftari¬ªga kiritilgan va tadbirkorlik bilan shug‚Äòullanish istagida bo‚Äòlgan xotin-qizlarning tadbirkorligini yo‚Äòlga qo‚Äòyish va rivojlantirishga yo‚Äònaltiriladi.            Bunda kreditlar 33 million so‚Äòmgacha miqdorda hokimlar yordamchilarining tavsiyalari asosida ajratiladi."""    )@dp.message_handler(text='Ayollar uchun chiqarilgan qaror va farmonlar')async def qaror(message: types.Message):    await message.answer(        f"""Qarorlar bilan ushbu web-saytdan tanishib chiqishngiz mumkin!""",        reply_markup=ikb2    )if __name__ == "__main__":    executor.start_polling(dispatcher=dp)    executor.start_polling(dp, on_startup=on_startup)